
--------------------------DDL--------DATA DEFINITION---------------------
CREATE
DROP
ALTER
-----IT CAN NOT BE ROLLED BACK

--------------------------DML-----------DATA MANIPULATION---------------------
INSERT 
UPDATE
DELETE

---------------------------DCL-------------DATA CONTROL -----------------
GRANT
REVOKE

----------------------------DQL-----DATA QUERY LANGUAGE------------------------
SELECT



---------------------------TCL------------TRANSACTIONAL CONTROL-----------------

COMMIT
ROLLBACK
SAVEPOINT

 ------------------------------------------
In real time changes are done on server, once the changes are done in server then
we can not retrieve it

i.e. commit 
- once commit is done.....not even god change it


------------------------------------------------------------
#SET SQL_SAFE_UPDATES = 0;
SET AUTOCOMMIT =0

START TRANSACTION;
ROLLBACK;
INTERMEDIATE SAVE: SAVEPOINT A
ROLLBACK TO A;

EVERYTHING BEFORE SAVEPOINT WILL BE SAVED

ALTER TABLE -----HAS DIRECT ENTRY TO SERVER 

-----------------------------------------------------

in real time we don't use full join
 inner join is default

------------------------------------------------------
UNION VS UNION ALL
-------

UNION AND UNION ALL BOTH COMBINES THE DATA OF TWO TABLES
UNION ALL COMBINES ALL ROWS INCLUDING DUPLICATES
UNION WILL EXCLUDE DUPLICATES
UNION ALL PERFORM FASTER OPERATION THAN UNION (AS UNION OPEARATION REQUIRE EXTRA FUNCTIONALITY
OF REMOVING DUPLICATES


--------------------------------------------
always use limit --------
select * from table limit 10;

-----------------------------------
find 3rd max salaried employee 
WHAT ARE WINDOW FUNCTION (RANK, DENSE_RANK, ROW_NUMBER)
WRITE QUERY 2ND HIGHEST SALARY IN ALL DEPTS 
DIFFERENCE BETWEEN RANK AND DENSE_RANK
WHT IS ROW_NUMBER

------------------------------

sum,min,max,avg --- aggregate function
upper, lower, length, round	---scaler functio	---return one row for every row-like apply
-------DATE, DATETIME, TIMESTAMP-------


basic knowledge on plsql
hands on exp on procedures and functions


stored procedures vs functions
procedure
-It is for repetitive code execution
- can work with or without parameters
- may or may not have return type
- we use call procedre_name- can not be used in sql query


functions
- it is for calculated business logic
- mandatory to have inputs
- use reeturn type
- used in select


pl-sql - combination of sql along with precedural features of programming language

pl/sql- execute block of code at once

call procedure_name();
select function_name(parameters mandatory); #it is for mathematical calculations